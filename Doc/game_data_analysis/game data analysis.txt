# Game Data Analysis 

밸런스로 시작한다. 게임 데이터를 분석하고 구조화 한다.  

게임은 데이터, 판단, 행위, 표현으로 구성된다. 

게임들에서 데이터가 매우 중요하다. 


## Monte Carlo 시뮬레이션 

http://boardsandbarley.com/2013/09/17/monte-carlo-simulations-for-game-design/

http://www0.cs.ucl.ac.uk/staff/d.silver/web/Publications_files/sim-balance.pdf


확률적으로 선택해서 실행하고 전체 분포를 유추한다.

- 시뮬레이션 대상으로 무엇을 선택할까? 

- 실 분포와 시뮬레이션 결과의 오차는 어떻게 계산할까? 


https://gamebalanceconcepts.wordpress.com/2010/07/28/level-4-probability-and-randomness/


## AI simulation by a backend reasoning tool

하나의 방법이다. 데이터와 코드를 사용하는 방식은 단순화 시킬 가능성이 높다. 

깊은 통찰이 가능하려면 시각화가 필요하다. 

시각화를 통해 전체를 한번에 볼 수 있다. 

제한된 시뮬레이션으로 빠른 피드백이 가능하다.  

기록된 데이터로 이전과 비교할 수 있다. 

여러 게임에 적용 가능하다. 

WzDat에서 진행한 로그 어댑터와 시각화를 사용할 수 있다. 

http://grail.cs.washington.edu/wp-content/uploads/2015/08/jaffe2012ecg.pdf

위 내용은 기본 바탕이 될 수 있다. 


### 설계 

AI 플레이어를 클라이언트를 통해 제공한다. 

구성 파일을 읽고 그걸 따라서 진행한다. 

진행된 결과를 로그로 남긴다. 

로그 결과를 그래프로 표현한다. 

각 부분에 adapter가 필요하다. 

랜덤화의 파라미터들이 중요하다. 

기록된 내용이 중요하다. 

### 진행 

뮤2에서 서버 로그를 통해 진행한다. 

별도 로그 파일을 사용한다. 

Wall 타임을 사용한다. 

랜덤화를 통해 필요한 시간을 줄인다. 

시각화는 WzDat 프레임워크의 도움을 받는다. 

클라이언트의 AI 진행은 Python + ZeroMQ 도움을 받는다. 

Python으로 Excel 데이터 로딩과 분석을 한다. 

### 항목들 

클래스와 몬스터, 몬스터 그룹들 대전 결과 

 - 경험치, 돈, 시간 등등 

클래스 간의 대전 결과 

퀘스트 시뮬레이션 

 - 순수한 별도 시뮬레이션 

 - 공간 배치 정보와 이동 시간 

던전 시뮬레이션 
 
 - 중요 에픽 던전, 시공의 틈의 플레이 시뮬레이션 

 - 필드 상의 배치 밸런스 

통합 

 - 성장 그래프

 - 대전 결과 그래프 

 













